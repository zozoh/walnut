apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "war"

group = 'org.nutz'
version = '1.r.61-SNAPSHOT'

description = "一台神奇的计算机"

sourceCompatibility = 1.8
targetCompatibility = 1.8

def version_tag = getDate()
def nutz_version = "1.r.61-SNAPSHOT"

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceSets {
    main{
    	java {
    		srcDirs = ["$projectDir/src"]
    	}
    	resources {
    		srcDirs = ["$projectDir/conf"]
    	}
    }
    test {
    	java {
    		srcDirs "$projectDir/test"
    	}
    }
}

processResources {
    from ('src'){
        exclude '**/*.java';
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
	options.compilerArgs = ["-parameters"]
}

tasks.withType(War) {
	webAppDirName = "WebContent"
}

repositories {
    //mavenLocal()
    maven { url "https://jfrog.nutz.cn/artifactory/jcenter"}
    maven { url "https://jfrog.nutz.cn/artifactory/snapshots"}
}

buildscript {
    repositories {
		maven { url "https://jfrog.nutz.cn/artifactory/jcenter"}
    }

    dependencies {
        classpath 'org.nutz:nutz:1.r.60'
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

import org.nutz.lang.Files
import org.nutz.lang.util.Disks

import org.apache.tools.ant.taskdefs.condition.Os

task lessc << {
	def lesscDir = 'ROOT'
	try {
		if (project.appdir != null) {
			lesscDir = project.appdir
		}
	} catch(e){}
	FileTree tree = fileTree(lesscDir) {
		include "**/*.less"
		exclude "**/font-awesome*/**/*.*"
	}
    File fHome = Files.findFile(".");
    String phHome = fHome.getCanonicalPath();
    println "do lessc in HOME: " + phHome
    String phLess = Files.getParent(phHome)+"/walnut/ROOT/rs/theme/less"
	tree.each {File _file ->
    	def _src = _file.path
    	def _dst = _src.substring(0, _src.length() - 4) + 'css'
        def _rph = Disks.getRelativePath(phHome, _src);
    	if (file(_dst).exists() && file(_src.toString()).lastModified() <= file(_dst).lastModified()) {
    		println "- no change >> " + _rph
    		return
    	}
        if(Files.getName(_src).startsWith("_")){
    		println "~ skip >> " + _rph
            return;
        }
    	println "lessc>> "  + Files.getName(_src) + " : "  + _rph
    	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    		exec {
    			commandLine "cmd.exe", "/c", "lessc", "--include-path="+phLess, _src, _dst
    			ignoreExitValue true
    		}
    	} else {
    		exec {
    			commandLine "lessc", "--include-path="+phLess, _src, _dst
    			ignoreExitValue true
    		}
    	}
	}
}
